/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 apps/presento-web/public/scenes/scene-v4.glb --types --shadows --keepnames --root
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, PerspectiveCamera } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

import { ScreenHtml } from '../components/screen-html.component';

type GLTFResult = GLTF & {
  nodes: {
    keyboard_bottom_panel01: THREE.Mesh;
    keyboard_bottom_panel_part_01: THREE.Mesh;
    keyboard_bottom_panel_part_02: THREE.Mesh;
    keyboard_bottom_panel_part_03: THREE.Mesh;
    keyboard_bottom_panel_part_04: THREE.Mesh;
    keyboard_top_panel01: THREE.Mesh;
    keyboard_top_panel_buttons01: THREE.Mesh;
    keyboard_top_panel_buttons_part_01: THREE.Mesh;
    keyboard_top_panel_buttons_part_02: THREE.Mesh;
    keyboard_top_panel_buttons_part_04: THREE.Mesh;
    keyboard_top_panel_buttons_part_05: THREE.Mesh;
    keyboard_top_panel_buttons_text01: THREE.Mesh;
    keyboard_top_panel_dynamic01: THREE.Mesh;
    keyboard_top_panel_part_01: THREE.Mesh;
    keyboard_top_panel_part_02: THREE.Mesh;
    keyboard_top_panel_part_04: THREE.Mesh;
    keyboard_top_panel_ports01: THREE.Mesh;
    keyboard_top_panel_ports_part_01: THREE.Mesh;
    keyboard_top_panel_ports_part_02: THREE.Mesh;
    keyboard_top_panel_ports_part_03: THREE.Mesh;
    keyboard_top_panel_ports_part_04: THREE.Mesh;
    keyboard_top_panel_ports_part_05: THREE.Mesh;
    keyboard_top_panel_ports_part_06: THREE.Mesh;
    keyboard_top_panel_ports_part_07: THREE.Mesh;
    keyboard_top_panel_ports_part_08: THREE.Mesh;
    keyboard_top_panel_ports_part_10: THREE.Mesh;
    keyboard_top_panel_ports_part_11: THREE.Mesh;
    keyboard_top_panel_ports_part_12: THREE.Mesh;
    keyboard_top_touchpad01: THREE.Mesh;
    Monitor_back_panel01: THREE.Mesh;
    Monitor_back_panel_logo01: THREE.Mesh;
    Monitor_front_camera_border01: THREE.Mesh;
    Monitor_front_camera_border_part_01: THREE.Mesh;
    Monitor_front_camera_lens01: THREE.Mesh;
    Monitor_front_camera_lens01001: THREE.Mesh;
    Monitor_front_glass01: THREE.Mesh;
    Monitor_front_panel01: THREE.Mesh;
    Monitor_front_panel_border01: THREE.Mesh;
    Monitor_front_panel_screen_border01: THREE.Mesh;
    ['x-screen-view']: THREE.Mesh;
    Cube: THREE.Mesh;
    Plane: THREE.Mesh;
  };
  materials: {
    ['aluminium-blue']: THREE.MeshStandardMaterial;
    mat_black: THREE.MeshStandardMaterial;
    glossy_black: THREE.MeshStandardMaterial;
    glass: THREE.MeshStandardMaterial;
    glossy_white: THREE.MeshStandardMaterial;
    chrome: THREE.MeshStandardMaterial;
    mat_gray_dark: THREE.MeshStandardMaterial;
    logo: THREE.MeshStandardMaterial;
    camera_lens: THREE.MeshStandardMaterial;
    back_black: THREE.MeshStandardMaterial;
    text_black: THREE.MeshStandardMaterial;
    screen: THREE.MeshStandardMaterial;
    Floor: THREE.MeshStandardMaterial;
    Background: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>;

export function SceneModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scenes/scene-v4.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="mac-book-pro-m1-14" position={[0, -14.956, 0]}>
        <mesh
          name="keyboard_bottom_panel01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_bottom_panel01.geometry}
          material={materials['aluminium-blue']}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_bottom_panel_part_01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_bottom_panel_part_01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_bottom_panel_part_02"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_bottom_panel_part_02.geometry}
          material={materials['aluminium-blue']}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_bottom_panel_part_03"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_bottom_panel_part_03.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_bottom_panel_part_04"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_bottom_panel_part_04.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel01.geometry}
          material={materials['aluminium-blue']}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_buttons01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_buttons01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_buttons_part_01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_buttons_part_01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_buttons_part_02"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_buttons_part_02.geometry}
          material={materials.glossy_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_buttons_part_04"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_buttons_part_04.geometry}
          material={materials.glass}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_buttons_part_05"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_buttons_part_05.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_buttons_text01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_buttons_text01.geometry}
          material={materials.glossy_white}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_dynamic01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_dynamic01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_part_01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_part_01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_part_02"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_part_02.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_part_04"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_part_04.geometry}
          material={materials['aluminium-blue']}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_02"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_02.geometry}
          material={materials.chrome}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_03"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_03.geometry}
          material={materials.chrome}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_04"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_04.geometry}
          material={materials.mat_gray_dark}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_05"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_05.geometry}
          material={materials.mat_gray_dark}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_06"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_06.geometry}
          material={materials.mat_gray_dark}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_07"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_07.geometry}
          material={materials.mat_gray_dark}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_08"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_08.geometry}
          material={materials.chrome}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_10"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_10.geometry}
          material={materials.chrome}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_11"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_11.geometry}
          material={materials.chrome}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_panel_ports_part_12"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_panel_ports_part_12.geometry}
          material={materials.chrome}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="keyboard_top_touchpad01"
          castShadow
          receiveShadow
          geometry={nodes.keyboard_top_touchpad01.geometry}
          material={materials['aluminium-blue']}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="Monitor_back_panel01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_back_panel01.geometry}
          material={materials['aluminium-blue']}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="Monitor_back_panel_logo01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_back_panel_logo01.geometry}
          material={materials.logo}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="Monitor_front_camera_border01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_front_camera_border01.geometry}
          material={materials.camera_lens}
          position={[-0.005, -0.154, 0.162]}
        />
        <mesh
          name="Monitor_front_camera_border_part_01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_front_camera_border_part_01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="Monitor_front_camera_lens01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_front_camera_lens01.geometry}
          material={materials.camera_lens}
          position={[-0.005, -0.154, 0.162]}
        />
        <mesh
          name="Monitor_front_camera_lens01001"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_front_camera_lens01001.geometry}
          material={materials.camera_lens}
          position={[0.195, -0.155, 0.162]}
        />
        {/*<mesh*/}
        {/*  name="Monitor_front_glass01"*/}
        {/*  castShadow*/}
        {/*  receiveShadow*/}
        {/*  geometry={nodes.Monitor_front_glass01.geometry}*/}
        {/*  material={materials.glass}*/}
        {/*  position={[-0.005, -0.154, 0.135]}*/}
        {/*/>*/}
        <mesh
          name="Monitor_front_panel01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_front_panel01.geometry}
          material={materials.back_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="Monitor_front_panel_border01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_front_panel_border01.geometry}
          material={materials.mat_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="Monitor_front_panel_screen_border01"
          castShadow
          receiveShadow
          geometry={nodes.Monitor_front_panel_screen_border01.geometry}
          material={materials.text_black}
          position={[-0.005, -0.154, 0.135]}
        />
        <mesh
          name="x-screen-view"
          // castShadow
          // receiveShadow
          geometry={nodes['x-screen-view'].geometry}
          position={[-0.005, 6.225, -5.529]}
        >
          <meshStandardMaterial transparent opacity={0} />
          <ScreenHtml width={620} height={402} device="mac-book-pro-m1-14" />
        </mesh>
      </group>
      <PerspectiveCamera
        name="Camera"
        makeDefault
        far={1000}
        near={0.1}
        fov={22.895}
        position={[20.732, -1.16, 39.897]}
        rotation={[-0.226, 0.457, 0.101]}
        scale={6.583}
      />
      <spotLight
        name="Spot"
        intensity={2000}
        angle={Math.PI / 8}
        penumbra={1}
        decay={2}
        position={[-2.462, 93.368, 13.895]}
        rotation={[-1.417, 0, 0]}
        scale={6.583}
        castShadow
        shadow-mapSize-width={2048} // Increased shadow map resolution
        shadow-mapSize-height={2048} // Increased shadow map resolution
        shadow-bias={-0.0001} // Bias to reduce shadow acne
      />
      <spotLight
        name="Spot001"
        intensity={700}
        angle={Math.PI / 8}
        penumbra={1}
        decay={2}
        color="#cfffe0"
        position={[-2.462, 24.881, 44.526]}
        rotation={[-Math.PI / 4, 0, 0]}
        scale={6.583}
        castShadow
        shadow-mapSize-width={2048} // Increased shadow map resolution
        shadow-mapSize-height={2048} // Increased shadow map resolution
        shadow-bias={-0.0001} // Bias to reduce shadow acne
      />
      <spotLight
        name="Spot002"
        intensity={200}
        angle={Math.PI / 8}
        penumbra={0.169}
        decay={2}
        position={[14.446, 15.368, -5.896]}
        rotation={[-Math.PI / 2, 0.614, 0]}
        scale={3.447}
        castShadow
        shadow-mapSize-width={2048} // Increased shadow map resolution
        shadow-mapSize-height={2048} // Increased shadow map resolution
        shadow-bias={-0.0001} // Bias to reduce shadow acne
      />
      <mesh
        name="Cube"
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials.Floor}
        position={[-2.462, -21.694, -5.896]}
      />
      <mesh
        name="Plane"
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials.Background}
        position={[-2.462, -18.922, -5.896]}
      />
    </group>
  );
}

useGLTF.preload('/scenes/scene-v4.glb');
