/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scenes/scene-v1.glb --types --shadows --keepnames --root
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, PerspectiveCamera } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    back_camera_border01: THREE.Mesh;
    back_camera_border_part_01: THREE.Mesh;
    back_camera_border_part_02: THREE.Mesh;
    back_camera_border_part_03: THREE.Mesh;
    back_camera_glass01: THREE.Mesh;
    back_camera_lens01: THREE.Mesh;
    back_camera_lens_glass01: THREE.Mesh;
    back_flash_border01: THREE.Mesh;
    back_flash_border_part_01: THREE.Mesh;
    back_flash_glass01: THREE.Mesh;
    back_flash_lens01: THREE.Mesh;
    back_flash_lens02: THREE.Mesh;
    back_glass01: THREE.Mesh;
    back_glass_part_01: THREE.Mesh;
    back_panel01: THREE.Mesh;
    back_panel_logo01: THREE.Mesh;
    back_panel_part_01: THREE.Mesh;
    back_panel_part_02: THREE.Mesh;
    body_side_panel01: THREE.Mesh;
    body_side_panel_bolts01: THREE.Mesh;
    body_side_panel_button01: THREE.Mesh;
    body_side_panel_buttons_part_01: THREE.Mesh;
    body_side_panel_buttons_part_02: THREE.Mesh;
    body_side_panel_dynamic01: THREE.Mesh;
    body_side_panel_part_01: THREE.Mesh;
    body_side_panel_part_02: THREE.Mesh;
    body_side_panel_part_03: THREE.Mesh;
    front_camera_border01: THREE.Mesh;
    front_camera_border_part_01: THREE.Mesh;
    front_camera_lens01: THREE.Mesh;
    front_camera_part_01: THREE.Mesh;
    front_glass01: THREE.Mesh;
    front_panel01: THREE.Mesh;
    screen01: THREE.Mesh;
    screen_border01: THREE.Mesh;
    screen_part_01: THREE.Mesh;
    screen_part_03: THREE.Mesh;
    usb01: THREE.Mesh;
    usb_part_01: THREE.Mesh;
    Plane: THREE.Mesh;
    Plane001: THREE.Mesh;
    Plane002: THREE.Mesh;
    Plane003: THREE.Mesh;
  };
  materials: {
    ['plastic_black.001']: THREE.MeshStandardMaterial;
    ['metal_black.001']: THREE.MeshStandardMaterial;
    ['back_black.001']: THREE.MeshStandardMaterial;
    ['mat_plastic_gray_dark.001']: THREE.MeshStandardMaterial;
    ['glass.001']: THREE.MeshStandardMaterial;
    ['camera_lens.001']: THREE.MeshStandardMaterial;
    ['glass_falsh.001']: THREE.MeshStandardMaterial;
    ['chrome.001']: THREE.MeshStandardMaterial;
    ['mat_white.001']: THREE.MeshStandardMaterial;
    ['glossy_yellow.001']: THREE.MeshStandardMaterial;
    matte_glass: THREE.MeshStandardMaterial;
    ['mat_black.002']: THREE.MeshStandardMaterial;
    ['chrome_logo_black.001']: THREE.MeshStandardMaterial;
    ['mat_black.003']: THREE.MeshStandardMaterial;
    ['glossy_black.001']: THREE.MeshStandardMaterial;
    ['aluminium_black.001']: THREE.MeshStandardMaterial;
    screen: THREE.MeshStandardMaterial;
    ['text_black.001']: THREE.MeshStandardMaterial;
    ['mat_gray_dark.001']: THREE.MeshStandardMaterial;
    ['gold.001']: THREE.MeshStandardMaterial;
    ['Material.024']: THREE.MeshStandardMaterial;
    ['Material.023']: THREE.MeshStandardMaterial;
    ['Material.025']: THREE.MeshStandardMaterial;
    metal_blue: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>;

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scenes/scene-v1.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        name="Apple_iPhone_14_Pro_Space_Black"
        position={[0, 0.005, 0]}
        rotation={[-1.567, -0.051, 0]}
      >
        <mesh
          name="back_camera_border01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border01.geometry}
          material={materials['plastic_black.001']}
        />
        <mesh
          name="back_camera_border_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border_part_01.geometry}
          material={materials['metal_black.001']}
        />
        <mesh
          name="back_camera_border_part_02"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border_part_02.geometry}
          material={materials['back_black.001']}
        />
        <mesh
          name="back_camera_border_part_03"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border_part_03.geometry}
          material={materials['mat_plastic_gray_dark.001']}
        />
        <mesh
          name="back_camera_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_glass01.geometry}
          material={materials['glass.001']}
        />
        <mesh
          name="back_camera_lens01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_lens01.geometry}
          material={materials['camera_lens.001']}
        />
        <mesh
          name="back_camera_lens_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_lens_glass01.geometry}
          material={materials['glass.001']}
        />
        <mesh
          name="back_flash_border01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_border01.geometry}
          material={materials['glass_falsh.001']}
        />
        <mesh
          name="back_flash_border_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_border_part_01.geometry}
          material={materials['chrome.001']}
        />
        <mesh
          name="back_flash_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_glass01.geometry}
          material={materials['glass.001']}
        />
        <mesh
          name="back_flash_lens01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_lens01.geometry}
          material={materials['mat_white.001']}
        />
        <mesh
          name="back_flash_lens02"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_lens02.geometry}
          material={materials['glossy_yellow.001']}
        />
        <mesh
          name="back_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_glass01.geometry}
          material={materials.matte_glass}
        />
        <mesh
          name="back_glass_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_glass_part_01.geometry}
          material={materials['glass.001']}
        />
        <mesh
          name="back_panel01"
          castShadow
          receiveShadow
          geometry={nodes.back_panel01.geometry}
          material={materials['mat_black.002']}
        />
        <mesh
          name="back_panel_logo01"
          castShadow
          receiveShadow
          geometry={nodes.back_panel_logo01.geometry}
          material={materials['chrome_logo_black.001']}
        />
        <mesh
          name="back_panel_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_panel_part_01.geometry}
          material={materials['mat_black.002']}
        />
        <mesh
          name="back_panel_part_02"
          castShadow
          receiveShadow
          geometry={nodes.back_panel_part_02.geometry}
          material={materials['mat_black.003']}
        />
        <mesh
          name="body_side_panel01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel01.geometry}
          material={materials['metal_black.001']}
        />
        <mesh
          name="body_side_panel_bolts01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_bolts01.geometry}
          material={materials['chrome.001']}
        />
        <mesh
          name="body_side_panel_button01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_button01.geometry}
          material={materials['metal_black.001']}
        />
        <mesh
          name="body_side_panel_buttons_part_01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_buttons_part_01.geometry}
          material={materials['metal_black.001']}
        />
        <mesh
          name="body_side_panel_buttons_part_02"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_buttons_part_02.geometry}
          material={materials['metal_black.001']}
        />
        <mesh
          name="body_side_panel_dynamic01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_dynamic01.geometry}
          material={materials['glossy_black.001']}
        />
        <mesh
          name="body_side_panel_part_01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_part_01.geometry}
          material={materials['aluminium_black.001']}
        />
        <mesh
          name="body_side_panel_part_02"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_part_02.geometry}
          material={materials['aluminium_black.001']}
        />
        <mesh
          name="body_side_panel_part_03"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_part_03.geometry}
          material={materials['mat_black.003']}
        />
        <mesh
          name="front_camera_border01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_border01.geometry}
          material={materials['mat_plastic_gray_dark.001']}
        />
        <mesh
          name="front_camera_border_part_01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_border_part_01.geometry}
          material={materials['back_black.001']}
        />
        <mesh
          name="front_camera_lens01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_lens01.geometry}
          material={materials['camera_lens.001']}
        />
        <mesh
          name="front_camera_part_01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_part_01.geometry}
          material={materials['mat_black.003']}
        />
        <mesh
          name="front_glass01"
          castShadow
          receiveShadow
          geometry={nodes.front_glass01.geometry}
          material={materials['glass.001']}
        />
        <mesh
          name="front_panel01"
          castShadow
          receiveShadow
          geometry={nodes.front_panel01.geometry}
          material={materials['back_black.001']}
        />
        <mesh
          name="screen01"
          castShadow
          receiveShadow
          geometry={nodes.screen01.geometry}
          material={materials.screen}
        />
        <mesh
          name="screen_border01"
          castShadow
          receiveShadow
          geometry={nodes.screen_border01.geometry}
          material={materials['text_black.001']}
        />
        <mesh
          name="screen_part_01"
          castShadow
          receiveShadow
          geometry={nodes.screen_part_01.geometry}
          material={materials['mat_black.003']}
        />
        <mesh
          name="screen_part_03"
          castShadow
          receiveShadow
          geometry={nodes.screen_part_03.geometry}
          material={materials['mat_gray_dark.001']}
        />
        <mesh
          name="usb01"
          castShadow
          receiveShadow
          geometry={nodes.usb01.geometry}
          material={materials['chrome.001']}
        />
        <mesh
          name="usb_part_01"
          castShadow
          receiveShadow
          geometry={nodes.usb_part_01.geometry}
          material={materials['gold.001']}
        />
      </group>
      <pointLight
        name="Point"
        intensity={1}
        decay={2}
        position={[-0.326, 0.397, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <spotLight
        name="Spot"
        intensity={1}
        angle={Math.PI / 8}
        penumbra={0.15}
        decay={2}
        position={[0, 0.531, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <PerspectiveCamera
        name="x-scene-camera"
        makeDefault={false}
        far={1000}
        near={0.1}
        fov={28.288}
        position={[0.092, 0.198, 0.288]}
        rotation={[-0.607, 0.412, 0.271]}
      />
      <mesh
        name="Plane"
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials['Material.024']}
      />
      <mesh
        name="Plane001"
        castShadow
        receiveShadow
        geometry={nodes.Plane001.geometry}
        material={materials['Material.023']}
        position={[0, -0.256, 0]}
      />
      <mesh
        name="Plane002"
        castShadow
        receiveShadow
        geometry={nodes.Plane002.geometry}
        material={materials['Material.025']}
        position={[-0.149, 0.023, -0.006]}
      />
      <mesh
        name="Plane003"
        castShadow
        receiveShadow
        geometry={nodes.Plane003.geometry}
        material={materials.metal_blue}
        position={[-0.075, 0.023, -0.006]}
      />
    </group>
  );
}

useGLTF.preload('/scenes/scene-v1.glb');
