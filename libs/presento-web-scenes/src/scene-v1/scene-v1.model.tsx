/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 apps/presento-web/public/scenes/scene-v1.glb --types --shadows --keepnames --root
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, PerspectiveCamera } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

import { ScreenHtml } from '../components/screen-html.component';

type GLTFResult = GLTF & {
  nodes: {
    back_camera_border01: THREE.Mesh;
    back_camera_border_part_01: THREE.Mesh;
    back_camera_border_part_02: THREE.Mesh;
    back_camera_border_part_03: THREE.Mesh;
    back_camera_glass01: THREE.Mesh;
    back_camera_lens01: THREE.Mesh;
    back_camera_lens_glass01: THREE.Mesh;
    back_flash_border01: THREE.Mesh;
    back_flash_border_part_01: THREE.Mesh;
    back_flash_glass01: THREE.Mesh;
    back_flash_lens01: THREE.Mesh;
    back_flash_lens02: THREE.Mesh;
    back_glass01: THREE.Mesh;
    back_glass_part_01: THREE.Mesh;
    back_panel01: THREE.Mesh;
    back_panel_logo01: THREE.Mesh;
    back_panel_part_01: THREE.Mesh;
    back_panel_part_02: THREE.Mesh;
    body_side_panel01: THREE.Mesh;
    body_side_panel_bolts01: THREE.Mesh;
    body_side_panel_button01: THREE.Mesh;
    body_side_panel_buttons_part_01: THREE.Mesh;
    body_side_panel_buttons_part_02: THREE.Mesh;
    body_side_panel_dynamic01: THREE.Mesh;
    body_side_panel_part_01: THREE.Mesh;
    body_side_panel_part_02: THREE.Mesh;
    body_side_panel_part_03: THREE.Mesh;
    front_camera_border01: THREE.Mesh;
    front_camera_border_part_01: THREE.Mesh;
    front_camera_lens01: THREE.Mesh;
    front_camera_part_01: THREE.Mesh;
    front_glass01: THREE.Mesh;
    front_panel01: THREE.Mesh;
    screen_border01: THREE.Mesh;
    screen_part_01: THREE.Mesh;
    screen_part_03: THREE.Mesh;
    usb01: THREE.Mesh;
    usb_part_01: THREE.Mesh;
    ['x-screen-view']: THREE.Mesh;
    Plane: THREE.Mesh;
  };
  materials: {
    plastic_black: THREE.MeshStandardMaterial;
    metal_black: THREE.MeshStandardMaterial;
    back_black: THREE.MeshStandardMaterial;
    mat_plastic_gray_dark: THREE.MeshStandardMaterial;
    glass: THREE.MeshStandardMaterial;
    camera_lens: THREE.MeshStandardMaterial;
    glass_falsh: THREE.MeshStandardMaterial;
    chrome: THREE.MeshStandardMaterial;
    mat_white: THREE.MeshStandardMaterial;
    glossy_yellow: THREE.MeshStandardMaterial;
    matte_glass: THREE.MeshStandardMaterial;
    ['mat_black.001']: THREE.MeshStandardMaterial;
    chrome_logo_black: THREE.MeshStandardMaterial;
    mat_black: THREE.MeshStandardMaterial;
    glossy_black: THREE.MeshStandardMaterial;
    aluminium_black: THREE.MeshStandardMaterial;
    text_black: THREE.MeshStandardMaterial;
    mat_gray_dark: THREE.MeshStandardMaterial;
    gold: THREE.MeshStandardMaterial;
    screen: THREE.MeshStandardMaterial;
    White: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[];
};

export function SceneModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scenes/scene-v1.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="x-device-group" position={[0, 0.511, 0]}>
        <mesh
          name="back_camera_border01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border01.geometry}
          material={materials.plastic_black}
          position={[0.086, 0.34, -0.037]}
          scale={0.068}
        />
        <mesh
          name="back_camera_border_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border_part_01.geometry}
          material={materials.metal_black}
          position={[0.086, 0.34, -0.03]}
          scale={0.068}
        />
        <mesh
          name="back_camera_border_part_02"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border_part_02.geometry}
          material={materials.back_black}
          position={[0.086, 0.34, -0.037]}
          scale={0.068}
        />
        <mesh
          name="back_camera_border_part_03"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_border_part_03.geometry}
          material={materials.mat_plastic_gray_dark}
          position={[0.089, 0.328, -0.029]}
          scale={0.068}
        />
        <mesh
          name="back_camera_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_glass01.geometry}
          material={materials.glass}
          position={[0.086, 0.34, -0.04]}
          scale={0.068}
        />
        <mesh
          name="back_camera_lens01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_lens01.geometry}
          material={materials.camera_lens}
          position={[0.089, 0.339, -0.028]}
          scale={0.068}
        />
        <mesh
          name="back_camera_lens_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_camera_lens_glass01.geometry}
          material={materials.glass}
          position={[0.024, 0.34, -0.032]}
          scale={0.068}
        />
        <mesh
          name="back_flash_border01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_border01.geometry}
          material={materials.glass_falsh}
          position={[0.025, 0.433, -0.019]}
          scale={0.068}
        />
        <mesh
          name="back_flash_border_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_border_part_01.geometry}
          material={materials.chrome}
          position={[0.025, 0.433, -0.016]}
          scale={0.068}
        />
        <mesh
          name="back_flash_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_glass01.geometry}
          material={materials.glass}
          position={[0.025, 0.433, -0.024]}
          scale={0.068}
        />
        <mesh
          name="back_flash_lens01"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_lens01.geometry}
          material={materials.mat_white}
          position={[0.025, 0.433, -0.018]}
          scale={0.068}
        />
        <mesh
          name="back_flash_lens02"
          castShadow
          receiveShadow
          geometry={nodes.back_flash_lens02.geometry}
          material={materials.glossy_yellow}
          position={[0.025, 0.433, -0.017]}
          scale={0.068}
        />
        <mesh
          name="back_glass01"
          castShadow
          receiveShadow
          geometry={nodes.back_glass01.geometry}
          material={materials.matte_glass}
          position={[0, 0, -0.02]}
          scale={0.068}
        />
        <mesh
          name="back_glass_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_glass_part_01.geometry}
          material={materials.glass}
          position={[0.084, 0.34, -0.025]}
          scale={0.068}
        />
        <mesh
          name="back_panel01"
          castShadow
          receiveShadow
          geometry={nodes.back_panel01.geometry}
          material={materials['mat_black.001']}
          position={[0, 0, -0.018]}
          scale={0.068}
        />
        <mesh
          name="back_panel_logo01"
          castShadow
          receiveShadow
          geometry={nodes.back_panel_logo01.geometry}
          material={materials.chrome_logo_black}
          position={[-0.002, 0.006, -0.012]}
          scale={0.068}
        />
        <mesh
          name="back_panel_part_01"
          castShadow
          receiveShadow
          geometry={nodes.back_panel_part_01.geometry}
          material={materials['mat_black.001']}
          position={[0.084, 0.34, -0.023]}
          scale={0.068}
        />
        <mesh
          name="back_panel_part_02"
          castShadow
          receiveShadow
          geometry={nodes.back_panel_part_02.geometry}
          material={materials.mat_black}
          position={[0.082, 0.323, -0.006]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel01.geometry}
          material={materials.metal_black}
          position={[0, 0, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_bolts01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_bolts01.geometry}
          material={materials.chrome}
          position={[0, -0.502, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_button01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_button01.geometry}
          material={materials.metal_black}
          position={[0.246, 0.124, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_buttons_part_01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_buttons_part_01.geometry}
          material={materials.metal_black}
          position={[-0.245, 0.149, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_buttons_part_02"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_buttons_part_02.geometry}
          material={materials.metal_black}
          position={[-0.244, 0.289, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_dynamic01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_dynamic01.geometry}
          material={materials.glossy_black}
          position={[0.015, -0.5, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_part_01"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_part_01.geometry}
          material={materials.aluminium_black}
          position={[0, 0, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_part_02"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_part_02.geometry}
          material={materials.aluminium_black}
          position={[0.244, -0.137, 0.013]}
          scale={0.068}
        />
        <mesh
          name="body_side_panel_part_03"
          castShadow
          receiveShadow
          geometry={nodes.body_side_panel_part_03.geometry}
          material={materials.mat_black}
          position={[-0.002, -0.126, 0.013]}
          scale={0.068}
        />
        <mesh
          name="front_camera_border01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_border01.geometry}
          material={materials.mat_plastic_gray_dark}
          position={[0.051, 0.447, 0.031]}
          scale={0.068}
        />
        <mesh
          name="front_camera_border_part_01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_border_part_01.geometry}
          material={materials.back_black}
          position={[0.05, 0.447, 0.034]}
          scale={0.068}
        />
        <mesh
          name="front_camera_lens01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_lens01.geometry}
          material={materials.camera_lens}
          position={[0.051, 0.447, 0.03]}
          scale={0.068}
        />
        <mesh
          name="front_camera_part_01"
          castShadow
          receiveShadow
          geometry={nodes.front_camera_part_01.geometry}
          material={materials.mat_black}
          position={[0, 0.462, 0.031]}
          scale={0.068}
        />
        <mesh
          name="front_glass01"
          castShadow
          receiveShadow
          geometry={nodes.front_glass01.geometry}
          material={materials.glass}
          position={[0, 0, 0.04]}
          scale={0.068}
        />
        <mesh
          name="front_panel01"
          castShadow
          receiveShadow
          geometry={nodes.front_panel01.geometry}
          material={materials.back_black}
          position={[0, 0, 0.037]}
          scale={0.068}
        />
        <mesh
          name="screen_border01"
          castShadow
          receiveShadow
          geometry={nodes.screen_border01.geometry}
          material={materials.text_black}
          position={[0, 0, 0.037]}
          scale={0.068}
        />
        <mesh
          name="screen_part_01"
          castShadow
          receiveShadow
          geometry={nodes.screen_part_01.geometry}
          material={materials.mat_black}
          position={[0, 0.448, 0.036]}
          scale={0.068}
        />
        <mesh
          name="screen_part_03"
          castShadow
          receiveShadow
          geometry={nodes.screen_part_03.geometry}
          material={materials.mat_gray_dark}
          position={[-0.025, 0.448, 0.037]}
          scale={0.068}
        />
        <mesh
          name="usb01"
          castShadow
          receiveShadow
          geometry={nodes.usb01.geometry}
          material={materials.chrome}
          position={[0, -0.474, 0.013]}
          scale={0.068}
        />
        <mesh
          name="usb_part_01"
          castShadow
          receiveShadow
          geometry={nodes.usb_part_01.geometry}
          material={materials.gold}
          position={[0, -0.475, 0.011]}
          scale={0.068}
        />
        <mesh
          name="x-screen-view"
          castShadow
          receiveShadow
          geometry={nodes['x-screen-view'].geometry}
          // material={materials.screen}
          position={[0, 0, 0.037]}
          scale={0.068}
        >
          <meshStandardMaterial transparent opacity={0} />
          <ScreenHtml device="iphone-14" />
        </mesh>
      </group>
      <PerspectiveCamera
        name="x-scene-camera"
        makeDefault
        far={1000}
        near={0.1}
        fov={22.895}
        position={[0, 0.618, 3.869]}
      />
      <spotLight
        name="x-scene-light-1"
        intensity={50}
        angle={0.335}
        penumbra={1}
        decay={2}
        color="#fff6dc"
        position={[0, 4.497, 1.498]}
        rotation={[-1.207, 0, 0]}
        scale={[1, 1, 0.573]}
        castShadow
        shadow-mapSize-width={2048} // Increased shadow map resolution
        shadow-mapSize-height={2048} // Increased shadow map resolution
        shadow-bias={-0.0001} // Bias to reduce shadow acne
      />
      <spotLight
        name="x-scene-light-2"
        intensity={100}
        angle={0.559}
        penumbra={1}
        decay={2}
        color="#fff6c5"
        position={[0, 13.009, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
        castShadow
        shadow-mapSize-width={2048} // Increased shadow map resolution
        shadow-mapSize-height={2048} // Increased shadow map resolution
        shadow-bias={-0.0001} // Bias to reduce shadow acne
      />
      <mesh
        name="Plane"
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials.White}
      />
    </group>
  );
}

useGLTF.preload('/scenes/scene-v1.glb');
